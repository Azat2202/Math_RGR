diff a/task5.ipynb b/task5.ipynb	(rejected hunks)
@@ -1,269 +1,269 @@
 {
-  "cells": [
-    {
-      "cell_type": "code",
-      "execution_count": 4,
-      "outputs": [],
-      "source": [
-        "import numpy as np\n",
-        "import math\n",
-        "import matplotlib.pyplot as plt\n",
-        "import matplotlib.patches as patches\n",
-        "import matplotlib.animation as animation"
-      ],
-      "metadata": {
-        "is_executing": true,
-        "id": "_MB39JZtA8cF"
-      }
-    },
-    {
-      "cell_type": "markdown",
-      "source": [
-        "## ╨Ъ╨╛╨╜╤Б╤В╨░╨╜╤В╤Л: "
-      ],
-      "metadata": {
-        "id": "kudcUhB_A_Zo"
-      }
-    },
-    {
-      "cell_type": "code",
-      "source": [
-        "f = lambda x: math.pow(math.e, -x) # ╨д╤Г╨╜╨║╤Ж╨╕╤П\n",
-        "a, b = 0, 10 # ╨Ш╤В╨╡╤А╨▓╨░╨╗╤Л\n",
-        "N = 100_000"
-      ],
-      "metadata": {
-        "id": "mdpeaxDIBD4M"
-      },
-      "execution_count": 13,
-      "outputs": []
-    },
-    {
-      "cell_type": "code",
-      "source": [
-        "X = np.linspace(a, b, N + 1).astype(int)"
-      ],
-      "metadata": {
-        "id": "bqWxwG2RB-ES"
-      },
-      "execution_count": 14,
-      "outputs": []
-    },
-    {
-      "cell_type": "markdown",
-      "source": [
-        "## ╨Ь╨╡╤В╨╛╨┤ ╨┐╤А╤П╨╝╨╛╤Г╨│╨╛╨╗╤М╨╜╨╕╨║╨╛╨▓\n",
-        "╨в╤А╨╡╨▒╤Г╨╡╨╝╨░╤П ╤В╨╛╤З╨╜╨╛╤Б╤В╤М ╨┤╨╛╤Б╤В╨╕╨│╨░╨╡╤В╤Б╤П ╨┐╤А╨╕ N = 10000 ╨╕ t = 0,5"
-      ],
-      "metadata": {
-        "id": "6916BCgJEDxC"
-      }
-    },
-    {
-      "cell_type": "code",
-      "source": [
-        "def rectangle_method(f, a, b, n, t):\n",
-        "  h = (b - a) / n\n",
-        "  result = sum([f(a + (i - t) * h) for i in range(1, n + 1)]) * h\n",
-        "  return result"
-      ],
-      "metadata": {
-        "id": "PR49-sBuEKNO"
-      },
-      "execution_count": 35,
-      "outputs": []
-    },
-    {
-      "cell_type": "code",
-      "source": [
-        "print(rectangle_method(f, a, b, 10_000, 0.5))"
-      ],
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/"
-        },
-        "id": "s90CToMyFN9D",
-        "outputId": "3d4237c6-6f19-4e2f-970d-5fb7cd820ddf"
-      },
-      "execution_count": 37,
-      "outputs": [
-        {
-          "output_type": "stream",
-          "name": "stdout",
-          "text": [
-            "0.9999545584054627\n"
-          ]
-        }
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "source": [
-        "## ╨Ь╨╡╤В╨╛╨┤ ╨в╤А╨░╨┐╨╡╤Ж╨╕╨╣\n",
-        "╨в╤А╨╡╨▒╤Г╨╡╨╝╨░╤П ╤В╨╛╤З╨╜╨╛╤Б╤В╤М ╨┤╨╛╤Б╤В╨╕╨│╨░╨╡╤В╤Б╤П ╨┐╤А╨╕ n = 10000"
-      ],
-      "metadata": {
-        "id": "nlEgwWMOFspM"
-      }
-    },
-    {
-      "cell_type": "code",
-      "source": [
-        "def trapezoid_method(f, a, b, n):\n",
-        "  h = (b - a) / n\n",
-        "  result = 0.5 * f(a) + sum([f(a + i*h) for i in range(1, n)]) + 0.5 * f(b)\n",
-        "  result *= h\n",
-        "  return result"
-      ],
-      "metadata": {
-        "id": "mN1VROzcFxdW"
-      },
-      "execution_count": 34,
-      "outputs": []
-    },
-    {
-      "cell_type": "code",
-      "source": [
-        "print(trapezoid_method(f, a, b, 10000))"
-      ],
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/"
-        },
-        "id": "jc6LMDHtHnaJ",
-        "outputId": "9c332d10-e0d3-47a0-97b4-2419f67984f2"
-      },
-      "execution_count": 39,
-      "outputs": [
-        {
-          "output_type": "stream",
-          "name": "stdout",
-          "text": [
-            "0.999962933011349\n"
-          ]
-        }
-      ]
-    },
-    {
-      "cell_type": "markdown",
-      "source": [
-        "## ╨Ь╨╡╤В╨╛╨┤ ╨┐╨░╤А╨░╨▒╨╛╨╗\n",
-        "╨в╤А╨╡╨▒╤Г╨╡╨╝╨░╤П ╤В╨╛╤З╨╜╨╛╤Б╤В╤М ╨┤╨╛╤Б╤В╨╕╨│╨░╨╡╤В╤Б╤П ╨┐╤А╨╕ n = 90"
-      ],
-      "metadata": {
-        "id": "0Sr6x6qrJg_h"
-      }
-    },
-    {
-      "cell_type": "code",
-      "source": [
-        "def parabola_method(f, a, b,n):\n",
-        "  h = (b - a) / n\n",
-        "  return (h / 3) * (sum([(f(a + h * (i - 1)) + 4 * f(a + h * i) + f(a + h * (i + 1))) for i in range(1, n, 2)]))"
-      ],
-      "metadata": {
-        "id": "x4jzcUpnJoyK"
-      },
-      "execution_count": 46,
-      "outputs": []
-    },
-    {
-      "cell_type": "code",
-      "source": [
-        "print(parabola_method(f, a, b, 90))"
-      ],
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/"
-        },
-        "id": "0QGEew2FKBew",
-        "outputId": "b381b719-5a0c-4165-d2aa-d5103fd00a4b"
-      },
-      "execution_count": 53,
-      "outputs": [
-        {
-          "output_type": "stream",
-          "name": "stdout",
-          "text": [
-            "0.9999554455433582\n"
-          ]
-        }
-      ]
+ "cells": [
+  {
+   "cell_type": "code",
+   "execution_count": 4,
+   "outputs": [],
+   "source": [
+    "import numpy as np\n",
+    "import math\n",
+    "import matplotlib.pyplot as plt\n",
+    "import matplotlib.patches as patches\n",
+    "import matplotlib.animation as animation"
+   ],
+   "metadata": {
+    "is_executing": true,
+    "id": "_MB39JZtA8cF"
+   }
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## ╨Ъ╨╛╨╜╤Б╤В╨░╨╜╤В╤Л: "
+   ],
+   "metadata": {
+    "id": "kudcUhB_A_Zo"
+   }
+  },
+  {
+   "cell_type": "code",
+   "source": [
+    "f = lambda x: math.pow(math.e, -x) # ╨д╤Г╨╜╨║╤Ж╨╕╤П\n",
+    "a, b = 0, 10 # ╨Ш╤В╨╡╤А╨▓╨░╨╗╤Л\n",
+    "N = 100_000"
+   ],
+   "metadata": {
+    "id": "mdpeaxDIBD4M"
+   },
+   "execution_count": 13,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "source": [
+    "X = np.linspace(a, b, N + 1).astype(int)"
+   ],
+   "metadata": {
+    "id": "bqWxwG2RB-ES"
+   },
+   "execution_count": 14,
+   "outputs": []
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## ╨Ь╨╡╤В╨╛╨┤ ╨┐╤А╤П╨╝╨╛╤Г╨│╨╛╨╗╤М╨╜╨╕╨║╨╛╨▓\n",
+    "╨в╤А╨╡╨▒╤Г╨╡╨╝╨░╤П ╤В╨╛╤З╨╜╨╛╤Б╤В╤М ╨┤╨╛╤Б╤В╨╕╨│╨░╨╡╤В╤Б╤П ╨┐╤А╨╕ N = 10000 ╨╕ t = 0,5"
+   ],
+   "metadata": {
+    "id": "6916BCgJEDxC"
+   }
+  },
+  {
+   "cell_type": "code",
+   "source": [
+    "def rectangle_method(f, a, b, n, t):\n",
+    "  h = (b - a) / n\n",
+    "  result = sum([f(a + (i - t) * h) for i in range(1, n + 1)]) * h\n",
+    "  return result"
+   ],
+   "metadata": {
+    "id": "PR49-sBuEKNO"
+   },
+   "execution_count": 35,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "source": [
+    "print(rectangle_method(f, a, b, 10_000, 0.5))"
+   ],
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/"
     },
+    "id": "s90CToMyFN9D",
+    "outputId": "3d4237c6-6f19-4e2f-970d-5fb7cd820ddf"
+   },
+   "execution_count": 37,
+   "outputs": [
     {
-      "cell_type": "markdown",
-      "source": [
-        "## ╨Ь╨╡╤В╨╛╨┤ ╨С╨╛╨┤╨╡ (╨С╤Г╨╗╤П)\n",
-        "h = 1\n"
-      ],
-      "metadata": {
-        "id": "5a40gUIiNHQp"
-      }
+     "output_type": "stream",
+     "name": "stdout",
+     "text": [
+      "0.9999545584054627\n"
+     ]
+    }
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## ╨Ь╨╡╤В╨╛╨┤ ╨в╤А╨░╨┐╨╡╤Ж╨╕╨╣\n",
+    "╨в╤А╨╡╨▒╤Г╨╡╨╝╨░╤П ╤В╨╛╤З╨╜╨╛╤Б╤В╤М ╨┤╨╛╤Б╤В╨╕╨│╨░╨╡╤В╤Б╤П ╨┐╤А╨╕ n = 10000"
+   ],
+   "metadata": {
+    "id": "nlEgwWMOFspM"
+   }
+  },
+  {
+   "cell_type": "code",
+   "source": [
+    "def trapezoid_method(f, a, b, n):\n",
+    "  h = (b - a) / n\n",
+    "  result = 0.5 * f(a) + sum([f(a + i*h) for i in range(1, n)]) + 0.5 * f(b)\n",
+    "  result *= h\n",
+    "  return result"
+   ],
+   "metadata": {
+    "id": "mN1VROzcFxdW"
+   },
+   "execution_count": 34,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "source": [
+    "print(trapezoid_method(f, a, b, 10000))"
+   ],
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/"
     },
+    "id": "jc6LMDHtHnaJ",
+    "outputId": "9c332d10-e0d3-47a0-97b4-2419f67984f2"
+   },
+   "execution_count": 39,
+   "outputs": [
     {
-      "cell_type": "code",
-      "source": [
-        "def bode_method(f, a, b, h):\n",
-        "  splitting = [(a + h*i) for i in range(0, int((b - a) / h) + 1)]\n",
-        "  n = len(splitting)\n",
-        "  return (2 * h / 45 ) * (7 * (f(splitting[0]\n",
-        "                             + f(splitting[-1]) \n",
-        "                             + 32 * (sum([f(splitting[i]) for i in range(1, n, 2)])))\n",
-        "                             + 12 * (sum([f(splitting[i]) for i in range(2, n - 1, 4)])) \n",
-        "                             + 14 * (sum([f(splitting[i]) for i in range(4, n - 3, 4)]))))"
-      ],
-      "metadata": {
-        "id": "WeWxSOXfNN-t"
-      },
-      "execution_count": 76,
-      "outputs": []
+     "output_type": "stream",
+     "name": "stdout",
+     "text": [
+      "0.999962933011349\n"
+     ]
+    }
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## ╨Ь╨╡╤В╨╛╨┤ ╨┐╨░╤А╨░╨▒╨╛╨╗\n",
+    "╨в╤А╨╡╨▒╤Г╨╡╨╝╨░╤П ╤В╨╛╤З╨╜╨╛╤Б╤В╤М ╨┤╨╛╤Б╤В╨╕╨│╨░╨╡╤В╤Б╤П ╨┐╤А╨╕ n = 90"
+   ],
+   "metadata": {
+    "id": "0Sr6x6qrJg_h"
+   }
+  },
+  {
+   "cell_type": "code",
+   "source": [
+    "def parabola_method(f, a, b,n):\n",
+    "  h = (b - a) / n\n",
+    "  return (h / 3) * (sum([(f(a + h * (i - 1)) + 4 * f(a + h * i) + f(a + h * (i + 1))) for i in range(1, n, 2)]))"
+   ],
+   "metadata": {
+    "id": "x4jzcUpnJoyK"
+   },
+   "execution_count": 46,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "source": [
+    "print(parabola_method(f, a, b, 90))"
+   ],
+   "metadata": {
+    "colab": {
+     "base_uri": "https://localhost:8080/"
     },
+    "id": "0QGEew2FKBew",
+    "outputId": "b381b719-5a0c-4165-d2aa-d5103fd00a4b"
+   },
+   "execution_count": 53,
+   "outputs": [
     {
-      "cell_type": "code",
-      "source": [
-        "print(bode_method(f, a, b, 1))"
-      ],
-      "metadata": {
-        "colab": {
-          "base_uri": "https://localhost:8080/"
-        },
-        "id": "8IPWjYHoPGrc",
-        "outputId": "40da76ab-5cbb-46c9-b2b0-6fb697980ae2"
-      },
-      "execution_count": 80,
-      "outputs": [
-        {
-          "output_type": "stream",
-          "name": "stdout",
-          "text": [
-            "0.5942808954466983\n"
-          ]
-        }
-      ]
+     "output_type": "stream",
+     "name": "stdout",
+     "text": [
+      "0.9999554455433582\n"
+     ]
     }
-  ],
-  "metadata": {
-    "kernelspec": {
-      "display_name": "Python 3",
-      "language": "python",
-      "name": "python3"
-    },
-    "language_info": {
-      "codemirror_mode": {
-        "name": "ipython",
-        "version": 2
-      },
-      "file_extension": ".py",
-      "mimetype": "text/x-python",
-      "name": "python",
-      "nbconvert_exporter": "python",
-      "pygments_lexer": "ipython2",
-      "version": "2.7.6"
-    },
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## ╨Ь╨╡╤В╨╛╨┤ ╨С╨╛╨┤╨╡ (╨С╤Г╨╗╤П)\n",
+    "h = 1\n"
+   ],
+   "metadata": {
+    "id": "5a40gUIiNHQp"
+   }
+  },
+  {
+   "cell_type": "code",
+   "source": [
+    "def bode_method(f, a, b, h):\n",
+    "  splitting = [(a + h*i) for i in range(0, int((b - a) / h) + 1)]\n",
+    "  n = len(splitting)\n",
+    "  return (2 * h / 45 ) * (7 * (f(splitting[0]\n",
+    "                             + f(splitting[-1]) \n",
+    "                             + 32 * (sum([f(splitting[i]) for i in range(1, n, 2)])))\n",
+    "                             + 12 * (sum([f(splitting[i]) for i in range(2, n - 1, 4)])) \n",
+    "                             + 14 * (sum([f(splitting[i]) for i in range(4, n - 3, 4)]))))"
+   ],
+   "metadata": {
+    "id": "WeWxSOXfNN-t"
+   },
+   "execution_count": 76,
+   "outputs": []
+  },
+  {
+   "cell_type": "code",
+   "source": [
+    "print(bode_method(f, a, b, 1))"
+   ],
+   "metadata": {
     "colab": {
-      "provenance": []
+     "base_uri": "https://localhost:8080/"
+    },
+    "id": "8IPWjYHoPGrc",
+    "outputId": "40da76ab-5cbb-46c9-b2b0-6fb697980ae2"
+   },
+   "execution_count": 80,
+   "outputs": [
+    {
+     "output_type": "stream",
+     "name": "stdout",
+     "text": [
+      "0.5942808954466983\n"
+     ]
     }
+   ]
+  }
+ ],
+ "metadata": {
+  "kernelspec": {
+   "display_name": "Python 3",
+   "language": "python",
+   "name": "python3"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 2
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython2",
+   "version": "2.7.6"
   },
-  "nbformat": 4,
-  "nbformat_minor": 0
-}
\ No newline at end of file
+  "colab": {
+   "provenance": []
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 0
+}
